//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyCalc.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNumber", ReplyAction="http://tempuri.org/IService1/AddNumberResponse")]
        string AddNumber(double number1, double number2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNumber", ReplyAction="http://tempuri.org/IService1/AddNumberResponse")]
        System.Threading.Tasks.Task<string> AddNumberAsync(double number1, double number2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SubNumber", ReplyAction="http://tempuri.org/IService1/SubNumberResponse")]
        string SubNumber(double number1, double number2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SubNumber", ReplyAction="http://tempuri.org/IService1/SubNumberResponse")]
        System.Threading.Tasks.Task<string> SubNumberAsync(double number1, double number2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MultNumber", ReplyAction="http://tempuri.org/IService1/MultNumberResponse")]
        string MultNumber(double number1, double number2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MultNumber", ReplyAction="http://tempuri.org/IService1/MultNumberResponse")]
        System.Threading.Tasks.Task<string> MultNumberAsync(double number1, double number2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DivNumber", ReplyAction="http://tempuri.org/IService1/DivNumberResponse")]
        string DivNumber(double number1, double number2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DivNumber", ReplyAction="http://tempuri.org/IService1/DivNumberResponse")]
        System.Threading.Tasks.Task<string> DivNumberAsync(double number1, double number2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MyCalc.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MyCalc.ServiceReference1.IService1>, MyCalc.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddNumber(double number1, double number2) {
            return base.Channel.AddNumber(number1, number2);
        }
        
        public System.Threading.Tasks.Task<string> AddNumberAsync(double number1, double number2) {
            return base.Channel.AddNumberAsync(number1, number2);
        }
        
        public string SubNumber(double number1, double number2) {
            return base.Channel.SubNumber(number1, number2);
        }
        
        public System.Threading.Tasks.Task<string> SubNumberAsync(double number1, double number2) {
            return base.Channel.SubNumberAsync(number1, number2);
        }
        
        public string MultNumber(double number1, double number2) {
            return base.Channel.MultNumber(number1, number2);
        }
        
        public System.Threading.Tasks.Task<string> MultNumberAsync(double number1, double number2) {
            return base.Channel.MultNumberAsync(number1, number2);
        }
        
        public string DivNumber(double number1, double number2) {
            return base.Channel.DivNumber(number1, number2);
        }
        
        public System.Threading.Tasks.Task<string> DivNumberAsync(double number1, double number2) {
            return base.Channel.DivNumberAsync(number1, number2);
        }
    }
}
